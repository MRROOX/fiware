FORMAT: 1A
HOST: http://authzforce.github.io/fiware-authorization-pdp/api/v2/
TITLE: FIWARE Authorization PDP API Specification
DATE: 11 September 2015
VERSION: 4.2
PREVIOUS_VERSION: 4.1
APIARY_PROJECT: authzforce-ce

# Abstract

This specification defines the FIWARE Authorization PDP API. FIWARE Authorization PDP is short for FIWARE Authorization PDP Generic Enabler which enables PEPs (Policy Enforcement Points) to get an authorization decision for a given access request, based on access control policies, and various attributes in the context of the access request: the requester, the requested resource, the requested action, etc. The API follows the REST architecture style, and complies with XACML v3.0. XACML (eXtensible Access Control Markup Language) is a OASIS standard for authorization policy syntax and evaluation logic, as well as for the authorization decision request/response format. The PDP (Policy Decision Point) and the PEP (Policy Enforcement Point) terms are defined in the XACML standard.

## Editors

  + Cyril DANGERVILLE, Thales Services

## Status

This is a work in progress and is changing on a daily basis.

This specification is licensed under the [FIWARE Open Specification License](http://forge.fiware.org/plugins/mediawiki/wiki/fiware/index.php/FI-WARE_Open_Specification_Legal_Notice_(implicit_patents_license)).

## Copyright

Copyright © 2014-2015 by [THALES](http://forge.fiware.org/plugins/mediawiki/wiki/fiware/index.php/Thales_sv).


# Specification

## Introduction

The FIWARE Authorization PDP API specification defines a RESTful API of an Authorization Policy Decision Point (PDP) compliant with the OASIS XACML standard. More specifically, it defines RESTful interfaces for:

* Managing XACML-compliant authorization policies;
* Requesting authorization decisions based on those policies, in a XACML-compliant request-response format;
* Managing multiple PDPs, one per domain (aka tenant), in order to provide multi-tenancy.

This APIARY blueprint gives a user-friendly description of the API. However, the official API reference for a specific release is available in a WADL (Web Application Description Language) and XML schema files on the [catalogue entry](http://catalogue.fiware.org/enablers/authorization-pdp-authzforce/downloads) in file `FIWARE-AuthorizationPDP-REST-API-Model-XXX-src.zip` where XXX is the current version of the API. From this WADL (and associated XSD files), you can generate code automatically for various languages, e.g. Apache CXF's WADL2Java plugin for Java.

## Conformance

All the interfaces described by this specification are mandatory and must be implemented in order to be compliant with. 

## Terminology

### Policy and PolicySet

 A *Policy* is a set of *Rules*, and a *PolicySet* is a set of *Policy* elements. A *Rule* consists of a condition on the access request attributes, and a decision – *Permit* or *Deny* - to apply if the condition holds true for the request. A *Policy* (resp. *PolicySet*) combines multiple *Rules* (resp. *Policies*) and therefore multiple decisions together in various ways (defined in the standard) to make the final decision. 

### PDP (Policy Decision Point)

The PDP provides authorization decisions based on various attributes given at runtime by PEPs (Policy Enforcement Points) about each incoming access request, and XACML policies that define multiple rules checking whether those attributes (and therefore the access request) satisfy certain conditions. The attributes provided by the PEP (see below) about each access request may be attributes about the request itself: The request URL, the HTTP method; about the requester: The access requester ID, requester role. The PDP may add attributes to the context on its own, such as the current date and time when the requested is received. By replacing all the attribute references in the policy with these input values, PDP is able to evaluate the policy and determine whether the access should be granted. 

### PAP (Policy Administration Point)

The PAP provides an interface for policy administrators to manage XACML policies to be enforced by the PDP. This endpoint is provided by the Authorization PDP GE as well as a RESTful API interface. The IdM GE also provides a form of graphical interface for the PAP, as part of its access management feature. This feature actually uses the Authorization PDP GE’s PAP API as backend. 

### Domain

The API is designed to be multi-tenant, i.e. it allows users or organizations to work on authorization policies in complete isolation from each other. In this document, we use the term *domain* instead of *tenant*. In this context, a domain mostly consists of a specific dedicated PDP, and resources (managed by the domain's PAP) to configure this PDP, the most important of which is the root *PolicySet* enforced by the PDP and other XACML *PolicySets* referenced by it (in the same domain).

# REST API

# Domains [/domains]
End-user policy domains.

## Add domain [POST]
Create managed resource for the administration domain.

+ Request (application/xml)
Properties of new domain

	```xml
	<properties xmlns="http://thalesgroup.com/authz/model/2015/09/resource" ... />
	```

+ Response 200 (application/xml)
Link to new domain

	```xml
	<link xmlns="http://www.w3.org/2005/Atom" ... />
	```

## Get domains [GET]
Retrieve links to domains.

+ Parameters
    + externalId: (string, optional) - If specified, only the domain with matching externalId is returned, or none if no match.

+ Response 200 (application/xml)
Link(s) to domain(s)

	```xml
	<resources xmlns="http://thalesgroup.com/authz/model/2015/09/resource" ... />
	```



